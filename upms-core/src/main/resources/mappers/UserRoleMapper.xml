<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gy.upms.dao.UserRoleMapper">
  <resultMap id="BaseResultMap" type="com.gy.upms.entity.UserRole">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, role_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_role
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_role
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.gy.upms.entity.UserRole">
    insert into user_role (id, user_id, role_id
      )
    values (#{id,jdbcType=CHAR}, #{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gy.upms.entity.UserRole">
    insert into user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gy.upms.entity.UserRole">
    update user_role
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gy.upms.entity.UserRole">
    update user_role
    set user_id = #{userId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=CHAR}
  </update>
    <delete id="deleteByRoleId" parameterType="java.lang.Integer">
         delete from user_role
    where role_id = #{roleId,jdbcType=INTEGER}
    </delete>
    <select id="selectByRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user_role
        where role_id = #{roleId,jdbcType=INTEGER}
    </select>
    <select id="selectByRoleIdForUserAccount" parameterType="java.lang.Integer" resultMap="com.gy.upms.dao.UserAccountMapper.BaseResultMap">
        select
        <include refid="com.gy.upms.dao.UserAccountMapper.Base_Column_List" />
        from user_account
        where exists (select 1 from user_role where role_id = #{roleId,jdbcType=INTEGER} and user_role.user_id=user_account.id)
    </select>
    <delete id="bulkDeleteByKey" parameterType="java.util.List">
        delete from user_role
        where 1=2
        <if test="ids!=null and ids.size()>0">
            or id in
            <foreach collection="ids" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </delete>
    <insert id="bulkInsert" parameterType="java.util.List">
        insert into user_role (id, user_id,role_id)
        values
        <foreach collection="records" index="index" item="item" separator="," >
            (uuid(),#{item.userId,jdbcType=INTEGER}, #{item.roleId,jdbcType=INTEGER})
        </foreach>
    </insert>
</mapper>